<Page x:Class="Pkn_HostSystem.Views.Pages.MesTcpPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
      xmlns:viewModels="clr-namespace:Pkn_HostSystem.ViewModels"
      xmlns:page="clr-namespace:Pkn_HostSystem.ViewModels.Page"
      xmlns:converter="clr-namespace:Pkn_HostSystem.Base.Converter"
      mc:Ignorable="d"
      Title="MesTcpPage"
      d:DataContext="{d:DesignInstance page:MesTcpViewModel}"
      d:DesignHeight="714.5" d:DesignWidth="1000"
      ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
      ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
      Foreground="{DynamicResource TextFillColorPrimaryBrush}"
      SizeChanged="MesTcpPage_OnSizeChanged">

    <Page.Resources>
        <converter:BooleanVisibilityConverter x:Key="BooleanVisibilityConverter" />
        <converter:NewRowAllowButtonConverter x:Key="NewRowAllowButtonConverter" />
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.2*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.RowSpan="2">
            <Grid Margin="15,0,0,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <!-- Title -->
                    <RowDefinition Height="*" />
                    <!-- ListBox 拉伸 -->
                    <RowDefinition Height="Auto" />
                    <!-- 按钮 -->
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="动态嵌入对象" FontSize="17" FontWeight="Black" Grid.Row="0" Margin="5,0" />
                    <ui:SymbolIcon Symbol="ChatWarning20" ToolTip="选中一个对象, 在输入框中利用: [请求名] ,可以进行嵌入" />
                </StackPanel>
                <Border Margin="0,5"
                        Grid.Row="1"

                        BorderThickness="2"
                        CornerRadius="10"
                        Background="{ui:ThemeResource CardBackgroundFillColorDefaultBrush}"
                        BorderBrush="{ui:ThemeResource CardStrokeColorDefaultBrush}">
                    <ListBox
                        Margin="5"
                        Name="DynNameListBox" ItemsSource="{Binding MesTcpModel.DynNetList}"
                        DisplayMemberPath="Name"
                        SelectionChanged="DynNameListBox_OnSelectionChanged">
                    </ListBox>
                </Border>
                <WrapPanel Grid.Row="2" HorizontalAlignment="Right">
                    <Button Content="添加" Command="{Binding AddDynCommand }" Margin="5,0" />
                    <Button Content="删除" Command="{Binding DeleteDynCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Page}}"
                            Margin="5,0" />
                </WrapPanel>
            </Grid>

        </Grid>

        <Grid Grid.Row="0" Grid.Column="1" Name="DynGrid">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.3*" />
                    <RowDefinition Height="0.7*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border
                    Grid.Row="0"
                    Margin="26,10"
                    Background="{ui:ThemeResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{ui:ThemeResource CardStrokeColorDefaultBrush}"

                    BorderThickness="1"
                    CornerRadius="10">
                    <TextBox

                        Margin="5"
                        VerticalScrollBarVisibility="Auto"
                        HorizontalScrollBarVisibility="Auto"
                        TextWrapping="Wrap"
                        AcceptsReturn="True"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}"
                        BorderThickness="0"
                        Style="{x:Null}"
                        Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                        Text="{Binding MesTcpModel.Message ,UpdateSourceTrigger= PropertyChanged }"
                        TextChanged="TextBoxBase_OnTextChanged"
                        FontSize="16" />
                </Border>

                <DataGrid
                    Grid.Row="1"
                    Name="DynConditionDataGrid"
                    Background="{ui:ThemeResource CardBackgroundFillColorDefaultBrush}"
                    BorderBrush="{ui:ThemeResource CardStrokeColorDefaultBrush}"
                    ItemsSource="{Binding MesTcpModel.DynConditionItemList}"
                    AutoGenerateColumns="False"
                    Margin="30, 0">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="请求名" Width="*" Binding="{Binding Name}" />
                        <DataGridTemplateColumn Width="*" Header="请求类型">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Text="{Binding GetMessageType}" />
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <ComboBox
                                            ItemsSource="{Binding DataContext.GetMessageType, RelativeSource={RelativeSource AncestorType=Page}}"
                                            SelectedValue="{Binding GetMessageType,UpdateSourceTrigger=PropertyChanged}"
                                            SelectionChanged="GetMessageChange" />
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="通讯名" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Text="{Binding ConnectName}"
                                                   Visibility="{Binding showConnectName ,Converter={StaticResource BooleanVisibilityConverter}}" />
                                        <TextBlock Text="{Binding HttpName}"
                                                   Visibility="{Binding showHttpName ,Converter={StaticResource BooleanVisibilityConverter}}" />
                                        <TextBlock Text="{Binding MethodName}"
                                                   Visibility="{Binding showUserDefined ,Converter={StaticResource BooleanVisibilityConverter}}"/>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <ComboBox
                                            Name="ComboBoxConnectName"
                                            Visibility="{Binding showConnectName ,Converter={StaticResource BooleanVisibilityConverter}}"
                                            ItemsSource="{Binding DataContext.MesTcpModel.NetWorkList,  RelativeSource={RelativeSource AncestorType=Page}}"
                                            DisplayMemberPath="NetworkDetailed.Name"
                                            SelectedValuePath="NetworkDetailed.Name"
                                            SelectedValue="{Binding ConnectName,UpdateSourceTrigger=PropertyChanged}"
                                            SelectionChanged="Selector_OnSelectionChanged" />
                                        <ComboBox
                                            Visibility="{Binding showHttpName ,Converter={StaticResource BooleanVisibilityConverter}}"
                                            ItemsSource="{Binding DataContext.MesTcpModel.HttpList,  RelativeSource={RelativeSource AncestorType=Page}}"
                                            DisplayMemberPath="Name"
                                            SelectedValuePath="Name"
                                            SelectedValue="{Binding HttpName,UpdateSourceTrigger=PropertyChanged}"
                                            SelectionChanged="HttpSelectChange" />

                                        <TextBlock Text="{Binding MethodName}"
                                                   Visibility="{Binding showUserDefined ,Converter={StaticResource BooleanVisibilityConverter}}"/>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="请求方式" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Text="{Binding MethodName}" />
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <ComboBox
                                            Visibility="{Binding showConnectName ,Converter={StaticResource BooleanVisibilityConverter}}"
                                            ItemsSource="{Binding DataContext.MesTcpModel.MethodName,  RelativeSource={RelativeSource AncestorType=Page}}"
                                            SelectedValue="{Binding MethodName ,UpdateSourceTrigger=PropertyChanged}"
                                            DropDownOpened="ComboBox_OnDropDownOpened" />
                                        <TextBlock Text="{Binding MethodName}"
                                                   Visibility="{Binding showHttpName ,Converter={StaticResource BooleanVisibilityConverter}}" />
                                        <TextBlock Text="{Binding MethodName}"
                                                   Visibility="{Binding showUserDefined ,Converter={StaticResource BooleanVisibilityConverter}}"/>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="参数" Width="2*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Text="{Binding ShowValue}" Margin="5" TextAlignment="Center" />
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid
                                            Visibility="{Binding showReadCoil ,Converter={StaticResource BooleanVisibilityConverter}}">
                                            <WrapPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,5">
                                                    <TextBlock Text="站地址" Margin="5" TextAlignment="Center" />
                                                    <ui:NumberBox
                                                        Text="{Binding StationAddress ,UpdateSourceTrigger=PropertyChanged}"
                                                        Width="150" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,5">
                                                    <TextBlock Text="起始地址" Margin="5" TextAlignment="Center" />
                                                    <ui:NumberBox
                                                        Text="{Binding StartAddress ,UpdateSourceTrigger=PropertyChanged}"
                                                        Width="150" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                                    <TextBlock Text="读取数量" Margin="5" TextAlignment="Center" />
                                                    <ui:NumberBox
                                                        Text="{Binding EndAddress ,UpdateSourceTrigger=PropertyChanged}"
                                                        Width="150" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                                    <ui:ToggleSwitch OnContent="启用switch" OffContent="关闭switch"
                                                                     IsChecked="{Binding OpenSwitch}" />
                                                    <Button Content="编辑switch" Margin="10,0" Click="ButtonBase_OnClick" />
                                                </StackPanel>
                                            </WrapPanel>
                                        </Grid>
                                        <Grid
                                            Visibility="{Binding showReadReg ,Converter={StaticResource BooleanVisibilityConverter}}">
                                            <WrapPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,5">
                                                    <TextBlock Text="站地址" Margin="5" TextAlignment="Center" />
                                                    <ui:NumberBox
                                                        Text="{Binding StationAddress ,UpdateSourceTrigger=PropertyChanged}"
                                                        Width="150" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,5">
                                                    <TextBlock Text="起始地址" Margin="5" TextAlignment="Center" />
                                                    <ui:NumberBox
                                                        Text="{Binding StartAddress ,UpdateSourceTrigger=PropertyChanged}"
                                                        Width="150" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                                    <TextBlock Text="读取数量" Margin="5" TextAlignment="Center" />
                                                    <ui:NumberBox
                                                        Text="{Binding EndAddress ,UpdateSourceTrigger=PropertyChanged}"
                                                        Width="150" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                                    <TextBlock Text="模式" Margin="5" TextAlignment="Center" />
                                                    <ComboBox
                                                        SelectedValue="{Binding BitNet ,UpdateSourceTrigger=PropertyChanged}"
                                                        ItemsSource="{Binding DataContext.MesTcpModel.BitNet, RelativeSource={RelativeSource AncestorType=Page}}"
                                                        Width="150" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                                    <ui:ToggleSwitch OffContent="关闭校验" OnContent="启动校验" Margin="5"
                                                                     IsChecked="{Binding OpenVerify}" />
                                                    <Button Content="校验" Click="SetVerify" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                                    <ui:ToggleSwitch OnContent="启用switch" OffContent="关闭switch"
                                                                     IsChecked="{Binding OpenSwitch}" />
                                                    <Button Content="编辑switch" Margin="10,0" Click="ButtonBase_OnClick" />
                                                </StackPanel>

                                            </WrapPanel>
                                        </Grid>
                                        <Grid
                                            Visibility="{Binding showSocket ,Converter={StaticResource BooleanVisibilityConverter}}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,5">
                                                <TextBlock Text="发送内容" VerticalAlignment="Center" />
                                                <TextBox
                                                    Text="{Binding SocketSendMessage,UpdateSourceTrigger=PropertyChanged}"
                                                    Width="150"
                                                    Margin="5" />
                                            </StackPanel>

                                            <UniformGrid Grid.Row="1"
                                                         Rows="3"
                                                         Columns="2">
                                                <ui:ToggleSwitch
                                                    OffContent="关闭校验" OnContent="启动校验"
                                                    IsChecked="{Binding OpenVerify}" />
                                                <Button
                                                    Margin="5,5,0,0"
                                                    Content="校验"
                                                    Click="SetVerify"
                                                    Width="100" />
                                                <ui:ToggleSwitch
                                                    OnContent="启用switch" OffContent="关闭switch"
                                                    IsChecked="{Binding OpenSwitch}" />
                                                <Button
                                                    Margin="5,5,0,0"
                                                    Content="编辑switch"
                                                    Click="ButtonBase_OnClick"
                                                    Width="100" />

                                                <ui:ToggleSwitch
                                                    OnContent="打开结果转发" OffContent="关闭结果转发"
                                                    IsChecked="{Binding ResultTranspond}" />
                                                <Button
                                                    Margin="5,5,0,0"
                                                    Content="编辑转发"
                                                    Width="100"
                                                    Click="ResultTranspond_OnClick" />
                                            </UniformGrid>

                                        </Grid>
                                        <Grid
                                            Visibility="{Binding showHostLinkReadReg ,Converter={StaticResource BooleanVisibilityConverter}}">
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,5">
                                                    <TextBlock Text="起始地址" Margin="5" TextAlignment="Center" />
                                                    <ui:NumberBox
                                                        Value="{Binding StartAddress ,UpdateSourceTrigger=PropertyChanged}"
                                                        Width="150" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,5">
                                                    <TextBlock Text="模式" Margin="5" TextAlignment="Center" />
                                                    <ComboBox
                                                        SelectedValue="{Binding BitNet ,UpdateSourceTrigger=PropertyChanged}"
                                                        ItemsSource="{Binding DataContext.MesTcpModel.BitNet, RelativeSource={RelativeSource AncestorType=Page}}"
                                                        Width="150" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                                    <ui:ToggleSwitch OnContent="启用switch" OffContent="关闭switch"
                                                                     IsChecked="{Binding OpenSwitch}" />
                                                    <Button Content="编辑switch" Margin="10,0" Click="ButtonBase_OnClick" />
                                                </StackPanel>
                                            </StackPanel>
                                        </Grid>
                                        <Grid
                                            Visibility="{Binding showHostLinkReadCoid ,Converter={StaticResource BooleanVisibilityConverter}}">
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,5">
                                                    <TextBlock Text="起始地址" Margin="5" TextAlignment="Center" />
                                                    <ui:NumberBox
                                                        Value="{Binding StartAddress ,UpdateSourceTrigger=PropertyChanged}"
                                                        Width="150" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                                    <ui:ToggleSwitch OnContent="启用switch" OffContent="关闭switch"
                                                                     IsChecked="{Binding OpenSwitch}" />
                                                    <Button Content="编辑switch" Margin="10,0" Click="ButtonBase_OnClick" />
                                                </StackPanel>
                                            </StackPanel>
                                        </Grid>
                                        <Grid
                                            HorizontalAlignment="Center"
                                            Visibility="{Binding showHttpName ,Converter={StaticResource BooleanVisibilityConverter}}">
                                            <Button Content="设置需要解析的Json" Click="SetHttpGetObject" />
                                        </Grid>
                                        <Grid
                                            HorizontalAlignment="Center"
                                            Visibility="{Binding showUserDefined ,Converter={StaticResource BooleanVisibilityConverter}}">
                                            <StackPanel>
                                                <ComboBox ItemsSource="{Binding DataContext.UserDefinedList ,RelativeSource={RelativeSource AncestorType=Page}}"
                                                          DisplayMemberPath ="Name"
                                                          Width="200"
                                                          SelectedValue="{Binding UserDefined}"/>
                                                <StackPanel Orientation="Horizontal">
                                                    <ui:ToggleSwitch />
                                                    <Button Content="设置需要解析的Json" Click="UserDefinedJsonSwitchButton"  Width="150"/>
                                                </StackPanel>
                                            </StackPanel>
                                            
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <Button
                    Grid.Row="2"
                    Content="删除" Width="100" HorizontalAlignment="Right" Margin="30 10 30 10"
                    Command="{Binding DeleteDynConditionCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType= Page}}" />
                <UniformGrid Grid.Row="3"
                             Margin="30,0"
                             Rows="{Binding MesTcpModel.SetRows}"
                             Columns="{Binding MesTcpModel.SetColumns}"
                             HorizontalAlignment="Center">
                    <StackPanel
                        Visibility="{Binding MesTcpModel.ShowSwitchSet ,Converter={StaticResource BooleanVisibilityConverter}}">
                        <GroupBox BorderThickness="0">
                            <GroupBox.Header>
                                <WrapPanel>
                                    <TextBlock Text="{Binding MesTcpModel.SetSwitchSetName}" Margin="5" />
                                    <ui:SymbolIcon Symbol="ChatWarning20" ToolTip="Case:为返回原内容,Value:为替换后内容,替换后进行嵌入 , Case中写入default为默认值" />
                                </WrapPanel>
                            </GroupBox.Header>
                            <DataGrid
                                HorizontalAlignment="Center"
                                Name="DynSwitchDataGrid"
                                Background="{ui:ThemeResource CardBackgroundFillColorDefaultBrush}"
                                BorderBrush="{ui:ThemeResource CardStrokeColorDefaultBrush}"
                                Height="150"
                                MinWidth="300"
                                ItemsSource="{Binding MesTcpModel.SwitchList}"
                                AutoGenerateColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Case" Width="*" Binding="{Binding Case}" />
                                    <DataGridTextColumn Header="Value" Width="*" Binding="{Binding Value}" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </GroupBox>
                        <WrapPanel HorizontalAlignment="Right">
                            <Button Content="删除" Click="DeleteClick" />
                            <Button Content="关闭" Margin="20,0,5,0" Click="ButtonBase_OnClick2" />
                        </WrapPanel>
                    </StackPanel>
                    <StackPanel
                        Visibility="{Binding MesTcpModel.VeritySet ,Converter={StaticResource BooleanVisibilityConverter}}">
                        <GroupBox BorderThickness="0">
                            <GroupBox.Header>
                                <WrapPanel>
                                    <TextBlock Text="{Binding MesTcpModel.SetVeritySetName}" Margin="5" />
                                    <ui:SymbolIcon Symbol="ChatWarning20" ToolTip="Name:方便确认, Type:为校验类型, Value:填要校验的值" />
                                </WrapPanel>
                            </GroupBox.Header>
                            <DataGrid
                                HorizontalAlignment="Center"
                                Name="DynVerifyDataGrid"
                                Background="{ui:ThemeResource CardBackgroundFillColorDefaultBrush}"
                                BorderBrush="{ui:ThemeResource CardStrokeColorDefaultBrush}"
                                Height="150"
                                MinWidth="300"
                                ItemsSource="{Binding MesTcpModel.VerifyList}"
                                AutoGenerateColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Width="*" Binding="{Binding Name}" />
                                    <DataGridTemplateColumn Header="Type" Width="*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <TextBlock Text="{Binding Type}" />
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                        <DataGridTemplateColumn.CellEditingTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <ComboBox
                                                        ItemsSource="{Binding viewModel.VerifyType,RelativeSource={RelativeSource AncestorType=Page}}"
                                                        SelectedValue="{Binding Type}" />
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellEditingTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Value" Width="*" Binding="{Binding Value}" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </GroupBox>
                        <WrapPanel HorizontalAlignment="Right">
                            <Button Content="删除" />
                            <Button Content="关闭" Margin="20,0,5,0" Click="ButtonBase_OnClick3" />
                        </WrapPanel>
                    </StackPanel>
                    <StackPanel
                        Visibility="{Binding MesTcpModel.HttpSet ,Converter={StaticResource BooleanVisibilityConverter}}">
                        <GroupBox BorderThickness="0">
                            <GroupBox.Header>
                                <WrapPanel>
                                    <TextBlock Text="{Binding MesTcpModel.SetHttpObjectName}" Margin="5" />
                                    <ui:SymbolIcon Symbol="ChatWarning20"
                                                   ToolTip="1.嵌入格式:请求名.Json映射名 
                                                   2.自定义解析的格式:UserDefined:类名:属性名" />
                                </WrapPanel>
                            </GroupBox.Header>
                            <DataGrid
                                HorizontalAlignment="Center"
                                Name="DynHttpDataGrid"
                                Background="{ui:ThemeResource CardBackgroundFillColorDefaultBrush}"
                                BorderBrush="{ui:ThemeResource CardStrokeColorDefaultBrush}"
                                Height="150"
                                MinWidth="300"
                                ItemsSource="{Binding MesTcpModel.HttpObjects}"
                                AutoGenerateColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Width="*" Binding="{Binding Name}" />
                                    <DataGridTextColumn Header="JsonKey" Width="*" Binding="{Binding JsonKey}" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </GroupBox>
                        <WrapPanel HorizontalAlignment="Right">
                            <Button Content="删除" />
                            <Button Content="关闭" Margin="20,0,5,0" Click="ButtonBase_OnClick4" />
                        </WrapPanel>
                    </StackPanel>
                    <StackPanel
                        Visibility="{Binding MesTcpModel.TranspondSet,Converter={StaticResource BooleanVisibilityConverter}}">
                        <GroupBox Header="{Binding MesTcpModel.TranspondSetName}" BorderThickness="1"
                                  Background="{ui:ThemeResource CardBackgroundFillColorDefaultBrush}"
                                  BorderBrush="{ui:ThemeResource CardStrokeColorDefaultBrush}">
                            <StackPanel>
                                <WrapPanel Margin="0,10,0,0">
                                    <TextBlock Text="转发方式" Margin="5" VerticalAlignment="Center" />
                                    <ComboBox ItemsSource="{Binding ForwardingMethod}"
                                              SelectedValue="{Binding MesTcpModel.TranspondModbusDetailed.TranspondMethod}" />
                                </WrapPanel>
                                <TabControl Margin="0,10,0,0" MinWidth="300">
                                    <TabItem>
                                        <TabItem.Header>
                                            <TextBlock Text="通讯方式" />
                                        </TabItem.Header>
                                        <Grid>
                                            <StackPanel>
                                                <WrapPanel Margin="0,10,0,0">
                                                    <TextBlock Text="通讯对象" Margin="5" VerticalAlignment="Center" />
                                                    <ComboBox
                                                        Width="100"
                                                        ItemsSource="{Binding MesTcpModel.NetWorkList}"
                                                        DisplayMemberPath="NetworkDetailed.Name"
                                                        SelectedValuePath="NetworkDetailed.Name"
                                                        SelectedValue="{Binding MesTcpModel.TranspondModbusDetailed.ConnectName}" />
                                                </WrapPanel>
                                                <WrapPanel Margin="0,10,0,0">
                                                    <TextBlock Text="站地址" Margin="5" VerticalAlignment="Center" />
                                                    <ui:NumberBox
                                                        Width="100"
                                                        Value="{Binding MesTcpModel.TranspondModbusDetailed.SlaveAddress,UpdateSourceTrigger=PropertyChanged}" />
                                                </WrapPanel>
                                                <WrapPanel Margin="0,10,0,0">
                                                    <TextBlock Text="起始地址" Margin="5" VerticalAlignment="Center" />
                                                    <ui:NumberBox
                                                        Width="100"
                                                        Value="{Binding MesTcpModel.TranspondModbusDetailed.StartAddress,UpdateSourceTrigger=PropertyChanged}" />
                                                </WrapPanel>
                                                <WrapPanel Margin="0,10,0,0">
                                                    <TextBlock Text="长度" Margin="5" VerticalAlignment="Center" />
                                                    <ui:NumberBox
                                                        Width="100"
                                                        Value="{Binding MesTcpModel.TranspondModbusDetailed.Length,UpdateSourceTrigger=PropertyChanged}" />
                                                </WrapPanel>

                                                <WrapPanel HorizontalAlignment="Right">
                                                    <Button Content="关闭" Margin="20,0,5,0" Click="ButtonBase_OnClick5" />
                                                </WrapPanel>
                                            </StackPanel>
                                        </Grid>
                                    </TabItem>
                                    <TabItem>
                                        <TabItem.Header>
                                            <TextBlock Text="队列" />
                                        </TabItem.Header>
                                    </TabItem>

                                </TabControl>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>

                </UniformGrid>
            </Grid>
        </Grid>
        <ui:SnackbarPresenter Grid.ColumnSpan="2" Name="SnackbarPresenter" Margin="0,-5,0,4" />
    </Grid>
</Page>